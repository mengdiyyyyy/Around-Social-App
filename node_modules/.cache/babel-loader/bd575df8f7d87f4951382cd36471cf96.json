{"ast":null,"code":"import _classCallCheck from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/src/components/Home.js\";\nimport React from 'react';\nimport { Tabs, Button, Spin } from 'antd';\nimport { GEO_OPTIONS, POS_KEY, API_ROOT, AUTH_HEADER, TOKEN_KEY } from '../constants.js';\nimport { Gallery } from './Gallery';\nvar TabPane = Tabs.TabPane;\nexport var Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoadingGeoLocation: false,\n      error: '',\n      isLoadingPosts: false,\n      posts: []\n    };\n\n    _this.onSuccessLoadGeoLocation = function (position) {\n      console.log(position);\n      var _position$coords = position.coords,\n          latitude = _position$coords.latitude,\n          longitude = _position$coords.longitude;\n      localStorage.setItem(POS_KEY, JSON.stringify({\n        lat: latitude,\n        lon: longitude\n      }));\n\n      _this.setState({\n        isLoadingGeolocation: false\n      });\n\n      _this.loadNearbyPosts();\n    };\n\n    _this.onFailedLoadGeoLocation = function () {\n      _this.setState({\n        isLoadingGeolocation: false,\n        error: 'Failed to load geo location.'\n      });\n    };\n\n    _this.loadNearbyPosts = function () {\n      var _JSON$parse = JSON.parse(localStorage.getItem(POS_KEY)),\n          lat = _JSON$parse.lat,\n          lon = _JSON$parse.lon;\n\n      var token = localStorage.getItem(TOKEN_KEY);\n\n      _this.setState({\n        isLoadingPosts: true,\n        error: ''\n      });\n\n      fetch(\"\".concat(API_ROOT, \"/search?lat=\").concat(lat, \"&lon=\").concat(lon, \"&range=20000\"), {\n        method: 'GET',\n        headers: {\n          Authorization: \"\".concat(AUTH_HEADER, \" \").concat(token)\n        }\n      }).then(function (response) {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error('Failed to load posts');\n      }).then(function (data) {\n        console.log(data);\n\n        _this.setState({\n          isLoadingPosts: false,\n          posts: data\n        });\n      }).catch(function (e) {\n        console.log(e.message);\n\n        _this.setState({\n          isLoadingPosts: false,\n          error: e.message\n        });\n      });\n    };\n\n    _this.getImagePosts = function () {\n      var _this$state = _this.state,\n          error = _this$state.error,\n          isLoadingGeoLocation = _this$state.isLoadingGeoLocation;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, error);\n      } else if (isLoadingGeoLocation) {\n        return React.createElement(Spin, {\n          tip: \"Loading geo location..\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n      } else if (isLoadingPosts) {\n        return React.createElement(Spin, {\n          tip: \"Loading posts..\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        });\n      } else if (posts.length > 0) {\n        var images = _this.state.posts.map(function (post) {\n          return {\n            user: post.user,\n            src: post.url,\n            thumbnail: post.url,\n            thumbnailWidth: 400,\n            thumbnailHeight: 300,\n            caption: post.message\n          };\n        });\n\n        return 'display posts';\n      } else {\n        return 'No nearby posts.';\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (\"geolocation\" in navigator) {\n        this.setState({\n          isLoadingGeolocation: true,\n          error: ''\n        });\n        navigator.geolocation.getCurrentPosition(this.onSuccessLoadGeoLocation, this.onFailedLoadGeoLocation, GEO_OPTIONS);\n      } else {\n        this.setState({\n          error: 'Geolocation is not supported.'\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var operations = React.createElement(Button, {\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Create New Post\");\n      return React.createElement(Tabs, {\n        tabBarExtraContent: operations,\n        className: \"main-tabs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: \"Image Posts\",\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.getImagePosts()), React.createElement(TabPane, {\n        tab: \"Video Posts\",\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Content of tab 2\"), React.createElement(TabPane, {\n        tab: \"Map\",\n        key: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Content of tab 3\"));\n    }\n  }]);\n\n  return Home;\n}(React.Component);","map":{"version":3,"sources":["/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/src/components/Home.js"],"names":["React","Tabs","Button","Spin","GEO_OPTIONS","POS_KEY","API_ROOT","AUTH_HEADER","TOKEN_KEY","Gallery","TabPane","Home","state","isLoadingGeoLocation","error","isLoadingPosts","posts","onSuccessLoadGeoLocation","position","console","log","coords","latitude","longitude","localStorage","setItem","JSON","stringify","lat","lon","setState","isLoadingGeolocation","loadNearbyPosts","onFailedLoadGeoLocation","parse","getItem","token","fetch","method","headers","Authorization","then","response","ok","json","Error","data","catch","e","message","getImagePosts","length","images","map","post","user","src","url","thumbnail","thumbnailWidth","thumbnailHeight","caption","navigator","geolocation","getCurrentPosition","operations","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Tabs, Button, Spin } from 'antd';\nimport { GEO_OPTIONS, POS_KEY, API_ROOT, AUTH_HEADER, TOKEN_KEY} from '../constants.js';\nimport { Gallery } from './Gallery'\n\nconst TabPane = Tabs.TabPane;\n\n\nexport class Home extends React.Component {\n    state = {\n        isLoadingGeoLocation: false,\n        error: '',\n        isLoadingPosts: false,\n        posts:[],\n    }\n\n    componentDidMount() {\n        if (\"geolocation\" in navigator) {\n            this.setState({ isLoadingGeolocation:true , error : '' });\n            navigator.geolocation.getCurrentPosition(\n                this.onSuccessLoadGeoLocation,\n                this.onFailedLoadGeoLocation,\n                GEO_OPTIONS);\n        } else {\n            this.setState({error: 'Geolocation is not supported.'});\n        }\n    }\n\n    onSuccessLoadGeoLocation = (position) => {\n        console.log(position);\n        const { latitude, longitude } = position.coords;\n        localStorage.setItem(POS_KEY, JSON.stringify({ lat: latitude, lon : longitude}));\n        this.setState({ isLoadingGeolocation:false });\n        this.loadNearbyPosts();\n\n    }\n\n\n\n    onFailedLoadGeoLocation = () => {\n        this.setState({ isLoadingGeolocation:false , error:'Failed to load geo location.' });\n    }\n\n    loadNearbyPosts = () => {\n        const { lat, lon } = JSON.parse(localStorage.getItem(POS_KEY));\n        const token = localStorage.getItem(TOKEN_KEY);\n        this.setState({ isLoadingPosts:true, error: '' });\n        fetch(`${API_ROOT}/search?lat=${lat}&lon=${lon}&range=20000`,  {\n            method: 'GET',\n            headers: {\n                Authorization: `${AUTH_HEADER} ${token}`,\n            },\n        }).then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n            throw new Error('Failed to load posts');\n        }).then((data) => {\n            console.log(data);\n            this.setState({ isLoadingPosts:false, posts : data });\n        }).catch((e) => {\n            console.log(e.message);\n            this.setState({ isLoadingPosts:false, error: e.message });\n        });\n    }\n\n    getImagePosts = () => {\n        const { error, isLoadingGeoLocation } = this.state;\n        if (error) {\n            return <div>{error}</div>\n        } else if (isLoadingGeoLocation) {\n            return <Spin tip=\"Loading geo location..\"/>\n        } else if (isLoadingPosts) {\n            return <Spin tip=\"Loading posts..\"/>\n        } else if (posts.length > 0) {\n            const images = this.state.posts.map((post) => {\n                return {\n                    user: post.user,\n                    src: post.url,\n                    thumbnail: post.url,\n                    thumbnailWidth: 400,\n                    thumbnailHeight: 300,\n                    caption: post.message,\n                }\n\n            });\n            return 'display posts';\n        } else {\n            return 'No nearby posts.';\n        }\n    }\n\n    render() {\n        const operations = <Button type=\"primary\">Create New Post</Button>;\n        return(\n            <Tabs tabBarExtraContent={operations} className=\"main-tabs\">\n                <TabPane tab=\"Image Posts\" key=\"1\">\n                    {this.getImagePosts()}\n                </TabPane>\n                <TabPane tab=\"Video Posts\" key=\"2\">Content of tab 2</TabPane>\n                <TabPane tab=\"Map\" key=\"3\">Content of tab 3</TabPane>\n            </Tabs>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}