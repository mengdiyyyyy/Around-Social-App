{"ast":null,"code":"import _classCallCheck from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/src/components/CreatePostButton.js\";\nimport React from 'react';\nimport { Modal, Button, message } from 'antd';\nimport { CreatePostForm } from './CreatePostForm';\nimport { API_ROOT, AUTH_HEADER, POS_KEY, TOKEN_KEY } from '../constants';\nexport var CreatePostButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreatePostButton, _React$Component);\n\n  function CreatePostButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreatePostButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreatePostButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      ModalText: 'Content of the modal',\n      visible: false,\n      confirmLoading: false\n    };\n\n    _this.showModal = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.handleOk = function () {\n      _this.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log(values);\n\n          var _JSON$parse = JSON.parse(localStorage.getItem(POS_KEY)),\n              lat = _JSON$parse.lat,\n              lon = _JSON$parse.lon;\n\n          var token = localStorage.getItem(TOKEN_KEY);\n          var formData = new FormData();\n          formData.set('lat', lat);\n          formData.set('lon', lon);\n          formData.set('message', values.message);\n          formData.set('image', values.image[0].originFileObj);\n\n          _this.setState({\n            confirmLoading: true\n          });\n\n          fetch(\"\".concat(API_ROOT, \"/post\"), {\n            method: 'POST',\n            headers: {\n              Authorization: \"\".concat(AUTH_HEADER, \" \").concat(token)\n            },\n            body: formData\n          }).then(function (response) {\n            if (response.ok) {\n              message.success('Post created successfully');\n              return;\n            }\n\n            throw new Error(response.statusText);\n          }).catch(function (e) {\n            console.log(e);\n            message.error('Failed to create the post.');\n          });\n          setTimeout(function () {\n            _this.setState({\n              visible: false,\n              confirmLoading: false\n            });\n          }, 2000);\n        }\n      });\n    };\n\n    _this.handleCancel = function () {\n      console.log('Clicked cancel button');\n\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.saveFormRef = function (formInstance) {\n      _this.form = formInstance;\n    };\n\n    return _this;\n  }\n\n  _createClass(CreatePostButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          visible = _this$state.visible,\n          confirmLoading = _this$state.confirmLoading;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        onClick: this.showModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Create New Post\"), React.createElement(Modal, {\n        title: \"Create New Post\",\n        visible: visible,\n        onOk: this.handleOk,\n        okText: \"Create\",\n        confirmLoading: confirmLoading,\n        onCancel: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(CreatePostForm, {\n        ref: this.saveFormRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CreatePostButton;\n}(React.Component);","map":{"version":3,"sources":["/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/src/components/CreatePostButton.js"],"names":["React","Modal","Button","message","CreatePostForm","API_ROOT","AUTH_HEADER","POS_KEY","TOKEN_KEY","CreatePostButton","state","ModalText","visible","confirmLoading","showModal","setState","handleOk","form","validateFields","err","values","console","log","JSON","parse","localStorage","getItem","lat","lon","token","formData","FormData","set","image","originFileObj","fetch","method","headers","Authorization","body","then","response","ok","success","Error","statusText","catch","e","error","setTimeout","handleCancel","saveFormRef","formInstance","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,OAAxB,QAAuC,MAAvC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAAQC,QAAR,EAAkBC,WAAlB,EAA+BC,OAA/B,EAAwCC,SAAxC,QAAwD,cAAxD;AAEA,WAAaC,gBAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACIC,KADJ,GACY;AACJC,MAAAA,SAAS,EAAE,sBADP;AAEJC,MAAAA,OAAO,EAAE,KAFL;AAGJC,MAAAA,cAAc,EAAE;AAHZ,KADZ;;AAAA,UAOIC,SAPJ,GAOgB,YAAM;AACd,YAAKC,QAAL,CAAc;AACVH,QAAAA,OAAO,EAAE;AADC,OAAd;AAGH,KAXL;;AAAA,UAaII,QAbJ,GAae,YAAM;AACb,YAAKC,IAAL,CAAUC,cAAV,CAAyB,UAACC,GAAD,EAAMC,MAAN,EAAiB;AACtC,YAAI,CAACD,GAAL,EAAU;AACNE,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AADM,4BAEYG,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBnB,OAArB,CAAX,CAFZ;AAAA,cAECoB,GAFD,eAECA,GAFD;AAAA,cAEKC,GAFL,eAEKA,GAFL;;AAGN,cAAMC,KAAK,GAAGJ,YAAY,CAACC,OAAb,CAAqBlB,SAArB,CAAd;AACA,cAAMsB,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,UAAAA,QAAQ,CAACE,GAAT,CAAa,KAAb,EAAmBL,GAAnB;AACAG,UAAAA,QAAQ,CAACE,GAAT,CAAa,KAAb,EAAmBJ,GAAnB;AACAE,UAAAA,QAAQ,CAACE,GAAT,CAAa,SAAb,EAAwBZ,MAAM,CAACjB,OAA/B;AACA2B,UAAAA,QAAQ,CAACE,GAAT,CAAa,OAAb,EAAsBZ,MAAM,CAACa,KAAP,CAAa,CAAb,EAAgBC,aAAtC;;AAEA,gBAAKnB,QAAL,CAAc;AACVF,YAAAA,cAAc,EAAE;AADN,WAAd;;AAIAsB,UAAAA,KAAK,WAAI9B,QAAJ,YAAqB;AACxB+B,YAAAA,MAAM,EAAE,MADgB;AAEtBC,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,YAAKhC,WAAL,cAAoBuB,KAApB;AADN,aAFa;AAKtBU,YAAAA,IAAI,EAAET;AALgB,WAArB,CAAL,CAMGU,IANH,CAMQ,UAACC,QAAD,EAAc;AACpB,gBAAIA,QAAQ,CAACC,EAAb,EAAiB;AACfvC,cAAAA,OAAO,CAACwC,OAAR,CAAgB,2BAAhB;AACA;AACD;;AACD,kBAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,UAAnB,CAAN;AACD,WAZD,EAYGC,KAZH,CAYS,UAACC,CAAD,EAAO;AACd1B,YAAAA,OAAO,CAACC,GAAR,CAAYyB,CAAZ;AACA5C,YAAAA,OAAO,CAAC6C,KAAR,CAAc,4BAAd;AACD,WAfD;AAiBAC,UAAAA,UAAU,CAAC,YAAM;AACb,kBAAKlC,QAAL,CAAc;AACVH,cAAAA,OAAO,EAAE,KADC;AAEVC,cAAAA,cAAc,EAAE;AAFN,aAAd;AAIH,WALS,EAKP,IALO,CAAV;AAMH;AACJ,OAvCD;AAwCH,KAtDL;;AAAA,UAwDIqC,YAxDJ,GAwDmB,YAAM;AACjB7B,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AACA,YAAKP,QAAL,CAAc;AACVH,QAAAA,OAAO,EAAE;AADC,OAAd;AAGH,KA7DL;;AAAA,UA+DIuC,WA/DJ,GA+DkB,UAACC,YAAD,EAAkB;AAC5B,YAAKnC,IAAL,GAAYmC,YAAZ;AACH,KAjEL;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAmEa;AAAA,wBAC+B,KAAK1C,KADpC;AAAA,UACGE,OADH,eACGA,OADH;AAAA,UACYC,cADZ,eACYA,cADZ;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,OAAO,EAAE,KAAKC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAII,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,iBAAb;AACO,QAAA,OAAO,EAAEF,OADhB;AAEO,QAAA,IAAI,EAAE,KAAKI,QAFlB;AAGO,QAAA,MAAM,EAAC,QAHd;AAIO,QAAA,cAAc,EAAEH,cAJvB;AAKO,QAAA,QAAQ,EAAE,KAAKqC,YALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,oBAAC,cAAD;AAAgB,QAAA,GAAG,EAAE,KAAKC,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CAJJ,CADJ;AAgBH;AArFL;;AAAA;AAAA,EAAsCnD,KAAK,CAACqD,SAA5C","sourcesContent":["import React from 'react';\nimport { Modal, Button, message } from 'antd';\nimport { CreatePostForm } from './CreatePostForm';\nimport {API_ROOT, AUTH_HEADER, POS_KEY, TOKEN_KEY} from '../constants';\n\nexport class CreatePostButton extends React.Component {\n    state = {\n        ModalText: 'Content of the modal',\n        visible: false,\n        confirmLoading: false,\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n\n    handleOk = () => {\n        this.form.validateFields((err, values) => {\n            if (!err) {\n                console.log(values);\n                const {lat,lon} = JSON.parse(localStorage.getItem(POS_KEY));\n                const token = localStorage.getItem(TOKEN_KEY);\n                const formData = new FormData();\n                formData.set('lat',lat);\n                formData.set('lon',lon);\n                formData.set('message', values.message);\n                formData.set('image', values.image[0].originFileObj);\n\n                this.setState({\n                    confirmLoading: true,\n                });\n\n                fetch(`${API_ROOT}/post`, {\n                  method: 'POST',\n                    headers: {\n                      Authorization: `${AUTH_HEADER} ${token}`,\n                    },\n                    body: formData,\n                }).then((response) => {\n                  if (response.ok) {\n                    message.success('Post created successfully');\n                    return;\n                  }\n                  throw new Error(response.statusText);\n                }).catch((e) => {\n                  console.log(e);\n                  message.error('Failed to create the post.');\n                });\n\n                setTimeout(() => {\n                    this.setState({\n                        visible: false,\n                        confirmLoading: false,\n                    });\n                }, 2000);\n            }\n        });\n    }\n\n    handleCancel = () => {\n        console.log('Clicked cancel button');\n        this.setState({\n            visible: false,\n        });\n    }\n\n    saveFormRef = (formInstance) => {\n        this.form = formInstance;\n    }\n\n    render() {\n        const { visible, confirmLoading } = this.state;\n        return (\n            <div>\n                <Button type=\"primary\" onClick={this.showModal}>\n                    Create New Post\n                </Button>\n                <Modal title=\"Create New Post\"\n                       visible={visible}\n                       onOk={this.handleOk}\n                       okText=\"Create\"\n                       confirmLoading={confirmLoading}\n                       onCancel={this.handleCancel}\n                >\n                    <CreatePostForm ref={this.saveFormRef}/>\n                </Modal>\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}