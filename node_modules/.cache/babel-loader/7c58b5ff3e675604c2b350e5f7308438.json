{"ast":null,"code":"import _classCallCheck from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/src/components/Home.js\";\nimport React from 'react';\nimport { Tabs, Button, Spin } from 'antd';\nimport { GEO_OPTIONS, POS_KEY, API_ROOT, AUTH_HEADER, TOKEN_KEY } from '../constants.js';\nimport { Gallery } from './Gallery';\nimport { CreatePostButton } from './CreatePostButton';\nimport { AroundMap } from './AroundMap';\nvar TabPane = Tabs.TabPane;\nexport var Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoadingGeoLocation: false,\n      error: '',\n      isLoadingPosts: false,\n      posts: []\n    };\n\n    _this.onSuccessLoadGeoLocation = function (position) {\n      console.log(position);\n      var _position$coords = position.coords,\n          latitude = _position$coords.latitude,\n          longitude = _position$coords.longitude;\n      localStorage.setItem(POS_KEY, JSON.stringify({\n        lat: latitude,\n        lon: longitude\n      }));\n\n      _this.setState({\n        isLoadingGeolocation: false\n      });\n\n      _this.loadNearbyPosts();\n    };\n\n    _this.onFailedLoadGeoLocation = function () {\n      _this.setState({\n        isLoadingGeolocation: false,\n        error: 'Failed to load geo location.'\n      });\n    };\n\n    _this.loadNearbyPosts = function (center) {\n      var _ref = center ? center : JSON.parse(localStorage.getItem(POS_KEY)),\n          lat = _ref.lat,\n          lon = _ref.lon;\n\n      var token = localStorage.getItem(TOKEN_KEY);\n\n      _this.setState({\n        isLoadingPosts: true,\n        error: ''\n      });\n\n      return fetch(\"\".concat(API_ROOT, \"/search?lat=\").concat(lat, \"&lon=\").concat(lon, \"&range=10\"), {\n        method: 'GET',\n        headers: {\n          Authorization: \"\".concat(AUTH_HEADER, \" \").concat(token)\n        }\n      }).then(function (response) {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error('Failed to load posts');\n      }).then(function (data) {\n        console.log(data);\n\n        _this.setState({\n          isLoadingPosts: false,\n          posts: data ? data : []\n        });\n      }).catch(function (e) {\n        console.log(e.message);\n\n        _this.setState({\n          isLoadingPosts: false,\n          error: e.message\n        });\n      });\n    };\n\n    _this.getImagePosts = function () {\n      var _this$state = _this.state,\n          error = _this$state.error,\n          isLoadingGeoLocation = _this$state.isLoadingGeoLocation,\n          isLoadingPosts = _this$state.isLoadingPosts,\n          posts = _this$state.posts;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, error);\n      } else if (isLoadingGeoLocation) {\n        return React.createElement(Spin, {\n          tip: \"Loading geo location..\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        });\n      } else if (isLoadingPosts) {\n        return React.createElement(Spin, {\n          tip: \"Loading posts..\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n      } else if (posts.length > 0) {\n        var images = _this.state.posts.map(function (post) {\n          return {\n            user: post.user,\n            src: post.url,\n            thumbnail: post.url,\n            thumbnailWidth: 400,\n            thumbnailHeight: 300,\n            caption: post.message\n          };\n        });\n\n        return React.createElement(Gallery, {\n          images: images,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        });\n      } else {\n        return 'No nearby posts.';\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (\"geolocation\" in navigator) {\n        this.setState({\n          isLoadingGeolocation: true,\n          error: ''\n        });\n        navigator.geolocation.getCurrentPosition(this.onSuccessLoadGeoLocation, this.onFailedLoadGeoLocation, GEO_OPTIONS);\n      } else {\n        this.setState({\n          error: 'Geolocation is not supported.'\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //const operations = <CreatePostButton loadNearbyPosts={this.loadNearbyPosts}/>;\n      var operations = React.createElement(CreatePostButton, {\n        loadNearbyPosts: this.loadNearbyPosts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      });\n      return React.createElement(Tabs, {\n        tabBarExtraContent: operations,\n        className: \"main-tabs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: \"Image Posts\",\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, this.getImagePosts()), React.createElement(TabPane, {\n        tab: \"Video Posts\",\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Spin, {\n        tip: \"Loading content2..\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(TabPane, {\n        tab: \"Map\",\n        key: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(AroundMap, {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD3CEh9DXuyjozqptVB5LA-dN7MxWWkr9s&v=3.exp&libraries=geometry,drawing,places\",\n        loadingElement: React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }),\n        containerElement: React.createElement(\"div\", {\n          style: {\n            height: \"800px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }),\n        mapElement: React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }),\n        posts: this.state.posts,\n        loadNearbyPosts: this.loadNearbyPosts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Home;\n}(React.Component);","map":{"version":3,"sources":["/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/src/components/Home.js"],"names":["React","Tabs","Button","Spin","GEO_OPTIONS","POS_KEY","API_ROOT","AUTH_HEADER","TOKEN_KEY","Gallery","CreatePostButton","AroundMap","TabPane","Home","state","isLoadingGeoLocation","error","isLoadingPosts","posts","onSuccessLoadGeoLocation","position","console","log","coords","latitude","longitude","localStorage","setItem","JSON","stringify","lat","lon","setState","isLoadingGeolocation","loadNearbyPosts","onFailedLoadGeoLocation","center","parse","getItem","token","fetch","method","headers","Authorization","then","response","ok","json","Error","data","catch","e","message","getImagePosts","length","images","map","post","user","src","url","thumbnail","thumbnailWidth","thumbnailHeight","caption","navigator","geolocation","getCurrentPosition","operations","height","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Tabs, Button, Spin } from 'antd';\nimport { GEO_OPTIONS, POS_KEY, API_ROOT, AUTH_HEADER, TOKEN_KEY} from '../constants.js';\nimport { Gallery } from './Gallery'\nimport { CreatePostButton } from './CreatePostButton'\nimport { AroundMap } from './AroundMap'\n\nconst TabPane = Tabs.TabPane;\n\n\nexport class Home extends React.Component {\n    state = {\n        isLoadingGeoLocation: false,\n        error: '',\n        isLoadingPosts: false,\n        posts:[],\n    }\n\n    componentDidMount() {\n        if (\"geolocation\" in navigator) {\n            this.setState({ isLoadingGeolocation:true , error : '' });\n            navigator.geolocation.getCurrentPosition(\n                this.onSuccessLoadGeoLocation,\n                this.onFailedLoadGeoLocation,\n                GEO_OPTIONS);\n        } else {\n            this.setState({error: 'Geolocation is not supported.'});\n        }\n    }\n\n    onSuccessLoadGeoLocation = (position) => {\n        console.log(position);\n        const { latitude, longitude } = position.coords;\n        localStorage.setItem(POS_KEY, JSON.stringify({ lat: latitude, lon : longitude}));\n        this.setState({ isLoadingGeolocation:false });\n        this.loadNearbyPosts();\n\n    }\n\n\n\n    onFailedLoadGeoLocation = () => {\n        this.setState({ isLoadingGeolocation:false , error:'Failed to load geo location.' });\n    }\n\n    loadNearbyPosts = (center) => {\n        const { lat, lon } = center ? center : JSON.parse(localStorage.getItem(POS_KEY));\n        const token = localStorage.getItem(TOKEN_KEY);\n        this.setState({ isLoadingPosts:true, error: '' });\n        return fetch(`${API_ROOT}/search?lat=${lat}&lon=${lon}&range=10`,  {\n            method: 'GET',\n            headers: {\n                Authorization: `${AUTH_HEADER} ${token}`,\n            },\n        }).then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n            throw new Error('Failed to load posts');\n        }).then((data) => {\n            console.log(data);\n            this.setState({ isLoadingPosts:false, posts : data ? data : [] });\n        }).catch((e) => {\n            console.log(e.message);\n            this.setState({ isLoadingPosts:false, error: e.message });\n        });\n    }\n\n    getImagePosts = () => {\n        const { error, isLoadingGeoLocation, isLoadingPosts, posts} = this.state;\n        if (error) {\n            return <div>{error}</div>\n        } else if (isLoadingGeoLocation) {\n            return <Spin tip=\"Loading geo location..\"/>\n        } else if (isLoadingPosts) {\n            return <Spin tip=\"Loading posts..\"/>\n        } else if (posts.length > 0) {\n            const images = this.state.posts.map((post) => {\n                return {\n                    user: post.user,\n                    src: post.url,\n                    thumbnail: post.url,\n                    thumbnailWidth: 400,\n                    thumbnailHeight: 300,\n                    caption: post.message,\n                }\n\n            });\n            return (<Gallery images={images}/>);\n        } else {\n            return 'No nearby posts.';\n        }\n    }\n\n    render() {\n        //const operations = <CreatePostButton loadNearbyPosts={this.loadNearbyPosts}/>;\n        const operations = <CreatePostButton loadNearbyPosts={this.loadNearbyPosts}/>;\n        return(\n            <Tabs tabBarExtraContent={operations} className=\"main-tabs\">\n                <TabPane tab=\"Image Posts\" key=\"1\">\n                    {this.getImagePosts()}\n                </TabPane>\n                <TabPane tab=\"Video Posts\" key=\"2\"><Spin tip=\"Loading content2..\"/></TabPane>\n                <TabPane tab=\"Map\" key=\"3\">\n                    <AroundMap\n                        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD3CEh9DXuyjozqptVB5LA-dN7MxWWkr9s&v=3.exp&libraries=geometry,drawing,places\"\n                        loadingElement={<div style={{ height: `100%` }} />}\n                        containerElement={<div style={{ height: `800px` }} />}\n                        mapElement={<div style={{ height: `100%` }} />}\n                        posts={this.state.posts}\n                        loadNearbyPosts={this.loadNearbyPosts}\n                    />\n                </TabPane>\n\n            </Tabs>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}