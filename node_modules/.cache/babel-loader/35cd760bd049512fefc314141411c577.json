{"ast":null,"code":"import _classCallCheck from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/src/components/Home.js\";\nimport React from 'react';\nimport { Tabs, Button, Spin } from 'antd';\nimport { GEO_OPTIONS } from '../constants.js';\nvar TabPane = Tabs.TabPane;\nexport var Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoadingGeoLocation: false,\n      error: ''\n    };\n\n    _this.onSuccessLoadGeoLocation = function (position) {\n      console.log(position);\n      var _position$coords = position.coords,\n          latitude = _position$coords.latitude,\n          longitude = _position$coords.longitude;\n      localStorage.setItem('POS_KEY');\n\n      _this.setState({\n        isLoadingGeolocation: false\n      });\n    };\n\n    _this.onFailedLoadGeoLocation = function () {\n      _this.setState({\n        isLoadingGeolocation: false,\n        error: 'Failed to load geo location.'\n      });\n    };\n\n    _this.getImagePosts = function () {\n      var _this$state = _this.state,\n          error = _this$state.error,\n          isLoadingGeoLocation = _this$state.isLoadingGeoLocation;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, error);\n      } else if (isLoadingGeoLocation) {\n        return React.createElement(Spin, {\n          tip: \"Loading geo location..\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      } else {\n        return 'content of tab1';\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (\"geolocation\" in navigator) {\n        this.setState({\n          isLoadingGeolocation: true,\n          error: ''\n        });\n        navigator.geolocation.getCurrentPosition(this.onSuccessLoadGeoLocation, this.onFailedLoadGeoLocation, GEO_OPTIONS);\n      } else {\n        this.setState({\n          error: 'Geolocation is not supported.'\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var operations = React.createElement(Button, {\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Create New Post\");\n      return React.createElement(Tabs, {\n        tabBarExtraContent: operations,\n        className: \"main-tabs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: \"Image Posts\",\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.getImagePosts()), React.createElement(TabPane, {\n        tab: \"Video Posts\",\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Content of tab 2\"), React.createElement(TabPane, {\n        tab: \"Map\",\n        key: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Content of tab 3\"));\n    }\n  }]);\n\n  return Home;\n}(React.Component);","map":{"version":3,"sources":["/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/src/components/Home.js"],"names":["React","Tabs","Button","Spin","GEO_OPTIONS","TabPane","Home","state","isLoadingGeoLocation","error","onSuccessLoadGeoLocation","position","console","log","coords","latitude","longitude","localStorage","setItem","setState","isLoadingGeolocation","onFailedLoadGeoLocation","getImagePosts","navigator","geolocation","getCurrentPosition","operations","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Tabs, Button, Spin } from 'antd';\nimport { GEO_OPTIONS} from '../constants.js';\n\nconst TabPane = Tabs.TabPane;\n\n\nexport class Home extends React.Component {\n    state = {\n        isLoadingGeoLocation: false,\n        error: '',\n    }\n\n    componentDidMount() {\n        if (\"geolocation\" in navigator) {\n            this.setState({ isLoadingGeolocation:true , error : '' });\n            navigator.geolocation.getCurrentPosition(\n                this.onSuccessLoadGeoLocation,\n                this.onFailedLoadGeoLocation,\n                GEO_OPTIONS);\n        } else {\n            this.setState({error: 'Geolocation is not supported.'});\n        }\n    }\n\n    onSuccessLoadGeoLocation = (position) => {\n        console.log(position);\n        const { latitude, longitude } = position.coords;\n        localStorage.setItem('POS_KEY');\n        this.setState({ isLoadingGeolocation:false });\n    }\n\n    onFailedLoadGeoLocation = () => {\n        this.setState({ isLoadingGeolocation:false , error:'Failed to load geo location.' });\n    }\n\n    getImagePosts = () => {\n        const { error, isLoadingGeoLocation } = this.state;\n        if (error) {\n            return <div>{error}</div>\n        }  else if (isLoadingGeoLocation) {\n            return <Spin tip=\"Loading geo location..\"/>\n        } else {\n            return 'content of tab1';\n        }\n    }\n\n    render() {\n        const operations = <Button type=\"primary\">Create New Post</Button>;\n        return(\n            <Tabs tabBarExtraContent={operations} className=\"main-tabs\">\n                <TabPane tab=\"Image Posts\" key=\"1\">\n                    {this.getImagePosts()}\n                </TabPane>\n                <TabPane tab=\"Video Posts\" key=\"2\">Content of tab 2</TabPane>\n                <TabPane tab=\"Map\" key=\"3\">Content of tab 3</TabPane>\n            </Tabs>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}