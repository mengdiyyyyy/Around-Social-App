{"ast":null,"code":"import _classCallCheck from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/src/components/Home.js\";\nimport React from 'react';\nimport { Tabs, Button } from 'antd';\nimport { GEO_OPTIONS } from '../constants.js';\nvar TabPane = Tabs.TabPane;\nexport var Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoadingGeoLocation: false\n    };\n\n    _this.onSuccessLoadGeoLocation = function (position) {\n      console.log(position);\n\n      _this.setState({\n        isLoadingGeolocation: false\n      });\n    };\n\n    _this.onFailedLoadGeoLocation = function () {\n      console.log('Failed to load geo location');\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (\"geolocation\" in navigator) {\n        this.setState({\n          isLoadingGeolocation: true\n        });\n        navigator.geolocation.getCurrentPosition(this.onSuccessLoadGeoLocation, this.onFailedLoadGeoLocation, GEO_OPTIONS);\n      } else {\n        /*geolocation IS NOT available*/\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var operations = React.createElement(Button, {\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Create New Post\");\n      return React.createElement(Tabs, {\n        tabBarExtraContent: operations,\n        className: \"main-tabs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: \"Image Posts\",\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Content of tab 1\"), React.createElement(TabPane, {\n        tab: \"Video Posts\",\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Content of tab 2\"), React.createElement(TabPane, {\n        tab: \"Map\",\n        key: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Content of tab 3\"));\n    }\n  }]);\n\n  return Home;\n}(React.Component);","map":{"version":3,"sources":["/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/src/components/Home.js"],"names":["React","Tabs","Button","GEO_OPTIONS","TabPane","Home","state","isLoadingGeoLocation","onSuccessLoadGeoLocation","position","console","log","setState","isLoadingGeolocation","onFailedLoadGeoLocation","navigator","geolocation","getCurrentPosition","operations","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,SAASC,WAAT,QAA2B,iBAA3B;AAEA,IAAMC,OAAO,GAAGH,IAAI,CAACG,OAArB;AAGA,WAAaC,IAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACIC,KADJ,GACY;AACJC,MAAAA,oBAAoB,EAAE;AADlB,KADZ;;AAAA,UAiBIC,wBAjBJ,GAiB+B,UAACC,QAAD,EAAc;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,YAAKG,QAAL,CAAc;AAAEC,QAAAA,oBAAoB,EAAC;AAAvB,OAAd;AACH,KApBL;;AAAA,UAsBIC,uBAtBJ,GAsB8B,YAAM;AAC5BJ,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACH,KAxBL;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAKwB;AAChB,UAAI,iBAAiBI,SAArB,EAAgC;AAC5B,aAAKH,QAAL,CAAc;AAAEC,UAAAA,oBAAoB,EAAC;AAAvB,SAAd;AACAE,QAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACI,KAAKT,wBADT,EAEI,KAAKM,uBAFT,EAGIX,WAHJ;AAIH,OAND,MAMO;AACH;AACH;AACJ;AAfL;AAAA;AAAA,6BA0Ba;AACL,UAAMe,UAAU,GAAG,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAnB;AACA,aACI,oBAAC,IAAD;AAAM,QAAA,kBAAkB,EAAEA,UAA1B;AAAsC,QAAA,SAAS,EAAC,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAC,aAAb;AAA2B,QAAA,GAAG,EAAC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAC,aAAb;AAA2B,QAAA,GAAG,EAAC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,EAGI,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAC,KAAb;AAAmB,QAAA,GAAG,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ,CADJ;AAOH;AAnCL;;AAAA;AAAA,EAA0BlB,KAAK,CAACmB,SAAhC","sourcesContent":["import React from 'react';\nimport { Tabs, Button } from 'antd';\nimport { GEO_OPTIONS} from '../constants.js';\n\nconst TabPane = Tabs.TabPane;\n\n\nexport class Home extends React.Component {\n    state = {\n        isLoadingGeoLocation: false,\n    }\n\n    componentDidMount() {\n        if (\"geolocation\" in navigator) {\n            this.setState({ isLoadingGeolocation:true });\n            navigator.geolocation.getCurrentPosition(\n                this.onSuccessLoadGeoLocation,\n                this.onFailedLoadGeoLocation,\n                GEO_OPTIONS);\n        } else {\n            /*geolocation IS NOT available*/\n        }\n    }\n\n    onSuccessLoadGeoLocation = (position) => {\n        console.log(position);\n        this.setState({ isLoadingGeolocation:false });\n    }\n\n    onFailedLoadGeoLocation = () => {\n        console.log('Failed to load geo location');\n    }\n\n    render() {\n        const operations = <Button type=\"primary\">Create New Post</Button>;\n        return(\n            <Tabs tabBarExtraContent={operations} className=\"main-tabs\">\n                <TabPane tab=\"Image Posts\" key=\"1\">Content of tab 1</TabPane>\n                <TabPane tab=\"Video Posts\" key=\"2\">Content of tab 2</TabPane>\n                <TabPane tab=\"Map\" key=\"3\">Content of tab 3</TabPane>\n            </Tabs>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}