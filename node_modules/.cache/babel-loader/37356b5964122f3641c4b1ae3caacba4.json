{"ast":null,"code":"import _classCallCheck from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/src/Register.js\";\nimport React from 'react';\nimport { Form, Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nvar FormItem = Form.Item;\nvar Option = Select.Option;\nvar AutoCompleteOption = AutoComplete.Option;\nvar residences = [{\n  value: 'zhejiang',\n  label: 'Zhejiang',\n  children: [{\n    value: 'hangzhou',\n    label: 'Hangzhou',\n    children: [{\n      value: 'xihu',\n      label: 'West Lake'\n    }]\n  }]\n}, {\n  value: 'jiangsu',\n  label: 'Jiangsu',\n  children: [{\n    value: 'nanjing',\n    label: 'Nanjing',\n    children: [{\n      value: 'zhonghuamen',\n      label: 'Zhong Hua Men'\n    }]\n  }]\n}];\n\nvar RegistrationForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegistrationForm, _React$Component);\n\n  function RegistrationForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegistrationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegistrationForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false,\n      autoCompleteResult: []\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    _this.handleWebsiteChange = function (value) {\n      var autoCompleteResult;\n\n      if (!value) {\n        autoCompleteResult = [];\n      } else {\n        autoCompleteResult = ['.com', '.org', '.net'].map(function (domain) {\n          return \"\".concat(value).concat(domain);\n        });\n      }\n\n      _this.setState({\n        autoCompleteResult: autoCompleteResult\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RegistrationForm, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var autoCompleteResult = this.state.autoCompleteResult;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      var tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        }\n      };\n      var prefixSelector = getFieldDecorator('prefix', {\n        initialValue: '86'\n      })(React.createElement(Select, {\n        style: {\n          width: 70\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"86\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"+86\"), React.createElement(Option, {\n        value: \"87\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"+87\")));\n      var websiteOptions = autoCompleteResult.map(function (website) {\n        return React.createElement(AutoCompleteOption, {\n          key: website,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, website);\n      });\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"E-mail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), getFieldDecorator('email', {\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Confirm Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        onBlur: this.handleConfirmBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, \"Nickname\\xA0\", React.createElement(Tooltip, {\n          title: \"What do you want others to call you?\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"question-circle-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), getFieldDecorator('nickname', {\n        rules: [{\n          required: true,\n          message: 'Please input your nickname!',\n          whitespace: true\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Habitual Residence\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), getFieldDecorator('residence', {\n        initialValue: ['zhejiang', 'hangzhou', 'xihu'],\n        rules: [{\n          type: 'array',\n          required: true,\n          message: 'Please select your habitual residence!'\n        }]\n      })(React.createElement(Cascader, {\n        options: residences,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Phone Number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), getFieldDecorator('phone', {\n        rules: [{\n          required: true,\n          message: 'Please input your phone number!'\n        }]\n      })(React.createElement(Input, {\n        addonBefore: prefixSelector,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Website\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), getFieldDecorator('website', {\n        rules: [{\n          required: true,\n          message: 'Please input website!'\n        }]\n      })(React.createElement(AutoComplete, {\n        dataSource: websiteOptions,\n        onChange: this.handleWebsiteChange,\n        placeholder: \"website\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      })))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Captcha\",\n        extra: \"We must make sure that your are a human.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), React.createElement(Row, {\n        gutter: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, getFieldDecorator('captcha', {\n        rules: [{\n          required: true,\n          message: 'Please input the captcha you got!'\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Get captcha\")))), React.createElement(FormItem, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), getFieldDecorator('agreement', {\n        valuePropName: 'checked'\n      })(React.createElement(Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"I have read the \", React.createElement(\"a\", {\n        href: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"agreement\")))), React.createElement(FormItem, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Register\")));\n    }\n  }]);\n\n  return RegistrationForm;\n}(React.Component);\n\nexport var Register = Form.create()(RegistrationForm);","map":{"version":3,"sources":["/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/src/Register.js"],"names":["React","Form","Input","Tooltip","Icon","Cascader","Select","Row","Col","Checkbox","Button","AutoComplete","FormItem","Item","Option","AutoCompleteOption","residences","value","label","children","RegistrationForm","state","confirmDirty","autoCompleteResult","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","handleConfirmBlur","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","handleWebsiteChange","map","domain","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","prefixSelector","initialValue","width","websiteOptions","website","rules","type","message","required","validator","whitespace","valuePropName","Component","Register","create"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Form, Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst AutoCompleteOption = AutoComplete.Option;\n\nconst residences = [{\n    value: 'zhejiang',\n    label: 'Zhejiang',\n    children: [{\n        value: 'hangzhou',\n        label: 'Hangzhou',\n        children: [{\n            value: 'xihu',\n            label: 'West Lake',\n        }],\n    }],\n}, {\n    value: 'jiangsu',\n    label: 'Jiangsu',\n    children: [{\n        value: 'nanjing',\n        label: 'Nanjing',\n        children: [{\n            value: 'zhonghuamen',\n            label: 'Zhong Hua Men',\n        }],\n    }],\n}];\n\nclass RegistrationForm extends React.Component {\n    state = {\n        confirmDirty: false,\n        autoCompleteResult: [],\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    }\n\n    handleConfirmBlur = (e) => {\n        const value = e.target.value;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    }\n\n    compareToFirstPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    }\n\n    validateToNextPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    }\n\n    handleWebsiteChange = (value) => {\n        let autoCompleteResult;\n        if (!value) {\n            autoCompleteResult = [];\n        } else {\n            autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n        }\n        this.setState({ autoCompleteResult });\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const { autoCompleteResult } = this.state;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 8 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 16 },\n            },\n        };\n        const tailFormItemLayout = {\n            wrapperCol: {\n                xs: {\n                    span: 24,\n                    offset: 0,\n                },\n                sm: {\n                    span: 16,\n                    offset: 8,\n                },\n            },\n        };\n        const prefixSelector = getFieldDecorator('prefix', {\n                initialValue: '86',\n            })(\n            <Select style={{ width: 70 }}>\n    <Option value=\"86\">+86</Option>\n            <Option value=\"87\">+87</Option>\n            </Select>\n    );\n\n        const websiteOptions = autoCompleteResult.map(website => (\n            <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n    ));\n\n        return (\n            <Form onSubmit={this.handleSubmit}>\n    <FormItem\n        {...formItemLayout}\n        label=\"E-mail\"\n            >\n            {getFieldDecorator('email', {\n            rules: [{\n                type: 'email', message: 'The input is not valid E-mail!',\n            }, {\n                required: true, message: 'Please input your E-mail!',\n            }],\n        })(\n        <Input />\n    )}\n    </FormItem>\n        <FormItem\n        {...formItemLayout}\n        label=\"Password\"\n            >\n            {getFieldDecorator('password', {\n            rules: [{\n                required: true, message: 'Please input your password!',\n            }, {\n                validator: this.validateToNextPassword,\n            }],\n        })(\n        <Input type=\"password\" />\n    )}\n    </FormItem>\n        <FormItem\n        {...formItemLayout}\n        label=\"Confirm Password\"\n            >\n            {getFieldDecorator('confirm', {\n            rules: [{\n                required: true, message: 'Please confirm your password!',\n            }, {\n                validator: this.compareToFirstPassword,\n            }],\n        })(\n        <Input type=\"password\" onBlur={this.handleConfirmBlur} />\n    )}\n    </FormItem>\n        <FormItem\n        {...formItemLayout}\n        label={(\n            <span>\n            Nickname&nbsp;\n    <Tooltip title=\"What do you want others to call you?\">\n            <Icon type=\"question-circle-o\" />\n            </Tooltip>\n            </span>\n    )}\n    >\n        {getFieldDecorator('nickname', {\n            rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\n        })(\n        <Input />\n        )}\n    </FormItem>\n        <FormItem\n        {...formItemLayout}\n        label=\"Habitual Residence\"\n            >\n            {getFieldDecorator('residence', {\n            initialValue: ['zhejiang', 'hangzhou', 'xihu'],\n                rules: [{ type: 'array', required: true, message: 'Please select your habitual residence!' }],\n        })(\n        <Cascader options={residences} />\n    )}\n    </FormItem>\n        <FormItem\n        {...formItemLayout}\n        label=\"Phone Number\"\n            >\n            {getFieldDecorator('phone', {\n            rules: [{ required: true, message: 'Please input your phone number!' }],\n        })(\n        <Input addonBefore={prefixSelector} style={{ width: '100%' }} />\n    )}\n    </FormItem>\n        <FormItem\n        {...formItemLayout}\n        label=\"Website\"\n            >\n            {getFieldDecorator('website', {\n            rules: [{ required: true, message: 'Please input website!' }],\n        })(\n        <AutoComplete\n        dataSource={websiteOptions}\n        onChange={this.handleWebsiteChange}\n        placeholder=\"website\"\n            >\n            <Input />\n            </AutoComplete>\n    )}\n    </FormItem>\n        <FormItem\n        {...formItemLayout}\n        label=\"Captcha\"\n        extra=\"We must make sure that your are a human.\"\n            >\n            <Row gutter={8}>\n            <Col span={12}>\n            {getFieldDecorator('captcha', {\n            rules: [{ required: true, message: 'Please input the captcha you got!' }],\n        })(\n        <Input />\n    )}\n    </Col>\n        <Col span={12}>\n            <Button>Get captcha</Button>\n        </Col>\n        </Row>\n        </FormItem>\n        <FormItem {...tailFormItemLayout}>\n        {getFieldDecorator('agreement', {\n            valuePropName: 'checked',\n        })(\n        <Checkbox>I have read the <a href=\"\">agreement</a></Checkbox>\n        )}\n    </FormItem>\n        <FormItem {...tailFormItemLayout}>\n    <Button type=\"primary\" htmlType=\"submit\">Register</Button>\n            </FormItem>\n            </Form>\n    );\n    }\n}\n\nexport const Register = Form.create()(RegistrationForm);\n\n"]},"metadata":{},"sourceType":"module"}