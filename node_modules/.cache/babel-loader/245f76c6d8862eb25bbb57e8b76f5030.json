{"ast":null,"code":"import _classCallCheck from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/src/components/Home.js\";\nimport React from 'react';\nimport { Tabs, Spin, Row, Col, Radio } from 'antd';\nimport { GEO_OPTIONS, POS_KEY, API_ROOT, AUTH_HEADER, TOKEN_KEY } from '../constants';\nimport { Gallery } from './Gallery';\nimport { CreatePostButton } from './CreatePostButton';\nimport { AroundMap } from './AroundMap';\nvar TabPane = Tabs.TabPane;\nvar RadioGroup = Radio.Group;\nexport var Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoadingGeoLocation: false,\n      error: '',\n      isLoadingPosts: false,\n      posts: [],\n      topic: 'around'\n    };\n\n    _this.onSuccessLoadGeoLocation = function (position) {\n      console.log(position);\n      var _position$coords = position.coords,\n          latitude = _position$coords.latitude,\n          longitude = _position$coords.longitude;\n      localStorage.setItem(POS_KEY, JSON.stringify({\n        lat: latitude,\n        lon: longitude\n      }));\n\n      _this.setState({\n        isLoadingGeoLocation: false\n      });\n\n      _this.loadNearbyPosts();\n    };\n\n    _this.onFailedLoadGeoLocation = function () {\n      _this.setState({\n        isLoadingGeoLocation: false,\n        error: 'Failed to load geolocation.'\n      });\n    };\n\n    _this.loadNearbyPosts = function (center, radius) {\n      var _ref = center ? center : JSON.parse(localStorage.getItem(POS_KEY)),\n          lat = _ref.lat,\n          lon = _ref.lon;\n\n      var range = radius ? radius : 20;\n      var token = localStorage.getItem(TOKEN_KEY);\n\n      _this.setState({\n        isLoadingPosts: true,\n        error: ''\n      });\n\n      return fetch(\"\".concat(API_ROOT, \"/search?lat=\").concat(lat, \"&lon=\").concat(lon, \"&range=\").concat(range), {\n        method: 'GET',\n        headers: {\n          Authorization: \"\".concat(AUTH_HEADER, \" \").concat(token)\n        }\n      }).then(function (response) {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error('Failed to load posts.');\n      }).then(function (data) {\n        console.log(data);\n\n        _this.setState({\n          isLoadingPosts: false,\n          posts: data ? data : []\n        });\n      }).catch(function (e) {\n        console.log(e.message);\n\n        _this.setState({\n          isLoadingPosts: false,\n          error: e.message\n        });\n      });\n    };\n\n    _this.getPanelContent = function (type) {\n      var _this$state = _this.state,\n          error = _this$state.error,\n          isLoadingGeoLocation = _this$state.isLoadingGeoLocation,\n          isLoadingPosts = _this$state.isLoadingPosts,\n          posts = _this$state.posts;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, error);\n      } else if (isLoadingGeoLocation) {\n        return React.createElement(Spin, {\n          tip: \"Loading geo location...\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        });\n      } else if (isLoadingPosts) {\n        return React.createElement(Spin, {\n          tip: \"Loading posts...\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        });\n      } else if (posts.length > 0) {\n        return type === 'image' ? _this.getImagePosts() : _this.getVideoPosts();\n      } else {\n        return 'No nearby posts.';\n      }\n    };\n\n    _this.getVideoPosts = function () {\n      return React.createElement(Row, {\n        gutter: 32,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, _this.state.posts.filter(function (post) {\n        return post.type === 'video';\n      }).map(function (post) {\n        return React.createElement(Col, {\n          span: 6,\n          key: post.url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"video\", {\n          src: post.url,\n          controls: true,\n          className: \"video-block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, post.user, \": \", post.message));\n      }));\n    };\n\n    _this.getImagePosts = function () {\n      var images = _this.state.posts.filter(function (post) {\n        return post.type === 'image';\n      }).map(function (post) {\n        return {\n          user: post.user,\n          src: post.url,\n          thumbnail: post.url,\n          caption: post.message,\n          thumbnailWidth: 400,\n          thumbnailHeight: 300\n        };\n      });\n\n      return React.createElement(Gallery, {\n        images: images,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      });\n    };\n\n    _this.onTopicChange = function (e) {\n      var topic = e.target.value;\n\n      _this.setState({\n        topic: topic\n      });\n\n      if (topic === 'around') {\n        _this.loadNearbyPosts();\n      } else {\n        var token = localStorage.getItem(TOKEN_KEY);\n\n        _this.setState({\n          isLoadingPosts: true,\n          error: ''\n        });\n\n        fetch(\"\".concat(API_ROOT, \"/cluster?term=face\"), {\n          method: 'GET',\n          headers: {\n            Authorization: \"\".concat(AUTH_HEADER, \" \").concat(token)\n          }\n        }).then(function (response) {\n          if (response.ok) {\n            return response.json();\n          }\n\n          throw new Error(response.statusText);\n        }).then(function (data) {\n          console.log(data);\n\n          _this.setState({\n            isLoadingPosts: false,\n            posts: data ? data : []\n          });\n        }).catch(function (e) {\n          console.log(e);\n\n          _this.setState({\n            isLoadingPosts: false,\n            error: 'Loading face images failed.'\n          });\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (\"geolocation\" in navigator) {\n        this.setState({\n          isLoadingGeoLocation: true,\n          error: ''\n        });\n        navigator.geolocation.getCurrentPosition(this.onSuccessLoadGeoLocation, this.onFailedLoadGeoLocation, GEO_OPTIONS);\n      } else {\n        this.setState({\n          error: 'Geolocation is not supported.'\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var operations = React.createElement(CreatePostButton, {\n        loadNearbyPosts: this.loadNearbyPosts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      });\n      return React.createElement(\"div\", {\n        className: \"home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(RadioGroup, {\n        onChange: this.onTopicChange,\n        value: this.state.topic,\n        className: \"topic-radio-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Radio, {\n        value: \"around\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Posts Around Me\"), React.createElement(Radio, {\n        value: \"face\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Faces Around The World\")), React.createElement(Tabs, {\n        tabBarExtraContent: operations,\n        className: \"main-tabs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: \"Image Posts\",\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, this.getPanelContent('image')), React.createElement(TabPane, {\n        tab: \"Video Posts\",\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, this.getPanelContent('video')), React.createElement(TabPane, {\n        tab: \"Map\",\n        key: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(AroundMap, {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD3CEh9DXuyjozqptVB5LA-dN7MxWWkr9s&v=3.exp&libraries=geometry,drawing,places\",\n        loadingElement: React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }),\n        containerElement: React.createElement(\"div\", {\n          style: {\n            height: \"800px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }),\n        mapElement: React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }),\n        posts: this.state.posts,\n        loadNearbyPosts: this.loadNearbyPosts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Home;\n}(React.Component);","map":{"version":3,"sources":["/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/src/components/Home.js"],"names":["React","Tabs","Spin","Row","Col","Radio","GEO_OPTIONS","POS_KEY","API_ROOT","AUTH_HEADER","TOKEN_KEY","Gallery","CreatePostButton","AroundMap","TabPane","RadioGroup","Group","Home","state","isLoadingGeoLocation","error","isLoadingPosts","posts","topic","onSuccessLoadGeoLocation","position","console","log","coords","latitude","longitude","localStorage","setItem","JSON","stringify","lat","lon","setState","loadNearbyPosts","onFailedLoadGeoLocation","center","radius","parse","getItem","range","token","fetch","method","headers","Authorization","then","response","ok","json","Error","data","catch","e","message","getPanelContent","type","length","getImagePosts","getVideoPosts","filter","post","map","url","user","images","src","thumbnail","caption","thumbnailWidth","thumbnailHeight","onTopicChange","target","value","statusText","navigator","geolocation","getCurrentPosition","operations","height","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,KAA/B,QAA4C,MAA5C;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,QAA/B,EAAyCC,WAAzC,EAAsDC,SAAtD,QAAuE,cAAvE;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,IAAMC,OAAO,GAAGb,IAAI,CAACa,OAArB;AACA,IAAMC,UAAU,GAAGV,KAAK,CAACW,KAAzB;AAEA,WAAaC,IAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACIC,KADJ,GACY;AACJC,MAAAA,oBAAoB,EAAE,KADlB;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,cAAc,EAAE,KAHZ;AAIJC,MAAAA,KAAK,EAAE,EAJH;AAKJC,MAAAA,KAAK,EAAE;AALH,KADZ;;AAAA,UAqBIC,wBArBJ,GAqB+B,UAACC,QAAD,EAAc;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AADqC,6BAELA,QAAQ,CAACG,MAFJ;AAAA,UAE7BC,QAF6B,oBAE7BA,QAF6B;AAAA,UAEnBC,SAFmB,oBAEnBA,SAFmB;AAGrCC,MAAAA,YAAY,CAACC,OAAb,CAAqBzB,OAArB,EAA8B0B,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,GAAG,EAAEN,QAAP;AAAiBO,QAAAA,GAAG,EAAEN;AAAtB,OAAf,CAA9B;;AACA,YAAKO,QAAL,CAAc;AAAElB,QAAAA,oBAAoB,EAAE;AAAxB,OAAd;;AACA,YAAKmB,eAAL;AACH,KA3BL;;AAAA,UA6BIC,uBA7BJ,GA6B8B,YAAM;AAC5B,YAAKF,QAAL,CAAc;AAAElB,QAAAA,oBAAoB,EAAE,KAAxB;AAA+BC,QAAAA,KAAK,EAAE;AAAtC,OAAd;AACH,KA/BL;;AAAA,UAiCIkB,eAjCJ,GAiCsB,UAACE,MAAD,EAASC,MAAT,EAAoB;AAAA,iBACbD,MAAM,GAAGA,MAAH,GAAYP,IAAI,CAACS,KAAL,CAAWX,YAAY,CAACY,OAAb,CAAqBpC,OAArB,CAAX,CADL;AAAA,UAC1B4B,GAD0B,QAC1BA,GAD0B;AAAA,UACrBC,GADqB,QACrBA,GADqB;;AAElC,UAAMQ,KAAK,GAAGH,MAAM,GAAGA,MAAH,GAAY,EAAhC;AACA,UAAMI,KAAK,GAAGd,YAAY,CAACY,OAAb,CAAqBjC,SAArB,CAAd;;AACA,YAAK2B,QAAL,CAAc;AAAEhB,QAAAA,cAAc,EAAE,IAAlB;AAAwBD,QAAAA,KAAK,EAAE;AAA/B,OAAd;;AACA,aAAO0B,KAAK,WAAItC,QAAJ,yBAA2B2B,GAA3B,kBAAsCC,GAAtC,oBAAmDQ,KAAnD,GAA4D;AACpEG,QAAAA,MAAM,EAAE,KAD4D;AAEpEC,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,YAAKxC,WAAL,cAAoBoC,KAApB;AADR;AAF2D,OAA5D,CAAL,CAKJK,IALI,CAKC,UAACC,QAAD,EAAc;AAClB,YAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,iBAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;;AACD,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACH,OAVM,EAUJJ,IAVI,CAUC,UAACK,IAAD,EAAU;AACd7B,QAAAA,OAAO,CAACC,GAAR,CAAY4B,IAAZ;;AACA,cAAKlB,QAAL,CAAc;AAAEhB,UAAAA,cAAc,EAAE,KAAlB;AAAyBC,UAAAA,KAAK,EAAEiC,IAAI,GAAGA,IAAH,GAAU;AAA9C,SAAd;AACH,OAbM,EAaJC,KAbI,CAaE,UAACC,CAAD,EAAO;AACZ/B,QAAAA,OAAO,CAACC,GAAR,CAAY8B,CAAC,CAACC,OAAd;;AACA,cAAKrB,QAAL,CAAc;AAAEhB,UAAAA,cAAc,EAAE,KAAlB;AAAyBD,UAAAA,KAAK,EAAEqC,CAAC,CAACC;AAAlC,SAAd;AACH,OAhBM,CAAP;AAiBH,KAvDL;;AAAA,UAyDIC,eAzDJ,GAyDsB,UAACC,IAAD,EAAU;AAAA,wBACuC,MAAK1C,KAD5C;AAAA,UAChBE,KADgB,eAChBA,KADgB;AAAA,UACTD,oBADS,eACTA,oBADS;AAAA,UACaE,cADb,eACaA,cADb;AAAA,UAC6BC,KAD7B,eAC6BA,KAD7B;;AAExB,UAAIF,KAAJ,EAAW;AACP,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMA,KAAN,CAAP;AACH,OAFD,MAEO,IAAGD,oBAAH,EAAyB;AAC5B,eAAO,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAC,yBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFM,MAEA,IAAIE,cAAJ,EAAoB;AACvB,eAAO,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAC,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFM,MAEA,IAAIC,KAAK,CAACuC,MAAN,GAAe,CAAnB,EAAsB;AACzB,eAAOD,IAAI,KAAK,OAAT,GAAmB,MAAKE,aAAL,EAAnB,GAA0C,MAAKC,aAAL,EAAjD;AACH,OAFM,MAEA;AACH,eAAO,kBAAP;AACH;AACJ,KAtEL;;AAAA,UAwEIA,aAxEJ,GAwEoB,YAAM;AAClB,aACI,oBAAC,GAAD;AAAK,QAAA,MAAM,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,MAAK7C,KAAL,CAAWI,KAAX,CAAiB0C,MAAjB,CAAwB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACL,IAAL,KAAc,OAAxB;AAAA,OAAxB,EAAyDM,GAAzD,CAA6D,UAACD,IAAD,EAAU;AACpE,eACI,oBAAC,GAAD;AAAK,UAAA,IAAI,EAAE,CAAX;AAAc,UAAA,GAAG,EAAEA,IAAI,CAACE,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAO,UAAA,GAAG,EAAEF,IAAI,CAACE,GAAjB;AAAsB,UAAA,QAAQ,MAA9B;AAA+B,UAAA,SAAS,EAAC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIF,IAAI,CAACG,IAAT,QAAiBH,IAAI,CAACP,OAAtB,CAFJ,CADJ;AAMH,OAPA,CADL,CADJ;AAYH,KArFL;;AAAA,UAuFII,aAvFJ,GAuFoB,YAAM;AAClB,UAAMO,MAAM,GAAG,MAAKnD,KAAL,CAAWI,KAAX,CACV0C,MADU,CACH,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACL,IAAL,KAAc,OAAxB;AAAA,OADG,EAEVM,GAFU,CAEN,UAACD,IAAD,EAAU;AACX,eAAO;AACHG,UAAAA,IAAI,EAAEH,IAAI,CAACG,IADR;AAEHE,UAAAA,GAAG,EAAEL,IAAI,CAACE,GAFP;AAGHI,UAAAA,SAAS,EAAEN,IAAI,CAACE,GAHb;AAIHK,UAAAA,OAAO,EAAEP,IAAI,CAACP,OAJX;AAKHe,UAAAA,cAAc,EAAE,GALb;AAMHC,UAAAA,eAAe,EAAE;AANd,SAAP;AAQH,OAXU,CAAf;;AAaA,aAAQ,oBAAC,OAAD;AAAS,QAAA,MAAM,EAAEL,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH,KAtGL;;AAAA,UAwGIM,aAxGJ,GAwGoB,UAAClB,CAAD,EAAO;AACnB,UAAMlC,KAAK,GAAGkC,CAAC,CAACmB,MAAF,CAASC,KAAvB;;AACA,YAAKxC,QAAL,CAAc;AAAEd,QAAAA,KAAK,EAALA;AAAF,OAAd;;AACA,UAAIA,KAAK,KAAK,QAAd,EAAwB;AACpB,cAAKe,eAAL;AACH,OAFD,MAEO;AACH,YAAMO,KAAK,GAAGd,YAAY,CAACY,OAAb,CAAqBjC,SAArB,CAAd;;AACA,cAAK2B,QAAL,CAAc;AAAEhB,UAAAA,cAAc,EAAE,IAAlB;AAAwBD,UAAAA,KAAK,EAAE;AAA/B,SAAd;;AACA0B,QAAAA,KAAK,WAAItC,QAAJ,yBAAkC;AACnCuC,UAAAA,MAAM,EAAE,KAD2B;AAEnCC,UAAAA,OAAO,EAAE;AACLC,YAAAA,aAAa,YAAKxC,WAAL,cAAoBoC,KAApB;AADR;AAF0B,SAAlC,CAAL,CAKGK,IALH,CAKQ,UAACC,QAAD,EAAc;AAClB,cAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,mBAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;;AACD,gBAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAAC2B,UAAnB,CAAN;AACH,SAVD,EAWK5B,IAXL,CAWU,UAACK,IAAD,EAAU;AACZ7B,UAAAA,OAAO,CAACC,GAAR,CAAY4B,IAAZ;;AACA,gBAAKlB,QAAL,CAAc;AAAEhB,YAAAA,cAAc,EAAE,KAAlB;AAAyBC,YAAAA,KAAK,EAAEiC,IAAI,GAAGA,IAAH,GAAU;AAA9C,WAAd;AACH,SAdL,EAeKC,KAfL,CAeW,UAACC,CAAD,EAAO;AACV/B,UAAAA,OAAO,CAACC,GAAR,CAAY8B,CAAZ;;AACA,gBAAKpB,QAAL,CAAc;AAAEhB,YAAAA,cAAc,EAAE,KAAlB;AAAyBD,YAAAA,KAAK,EAAE;AAAhC,WAAd;AACH,SAlBL;AAmBH;AACJ,KApIL;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCASwB;AAChB,UAAI,iBAAiB2D,SAArB,EAAgC;AAC5B,aAAK1C,QAAL,CAAc;AAAElB,UAAAA,oBAAoB,EAAE,IAAxB;AAA8BC,UAAAA,KAAK,EAAE;AAArC,SAAd;AACA2D,QAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACI,KAAKzD,wBADT,EAEI,KAAKe,uBAFT,EAGIjC,WAHJ;AAIH,OAND,MAMO;AACH,aAAK+B,QAAL,CAAc;AAAEjB,UAAAA,KAAK,EAAE;AAAT,SAAd;AACH;AACJ;AAnBL;AAAA;AAAA,6BAsIa;AACL,UAAM8D,UAAU,GAAG,oBAAC,gBAAD;AAAkB,QAAA,eAAe,EAAE,KAAK5C,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnB;AACA,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,KAAKqC,aAA3B;AAA0C,QAAA,KAAK,EAAE,KAAKzD,KAAL,CAAWK,KAA5D;AAAmE,QAAA,SAAS,EAAC,mBAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFJ,CADJ,EAKI,oBAAC,IAAD;AAAM,QAAA,kBAAkB,EAAE2D,UAA1B;AAAsC,QAAA,SAAS,EAAC,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAC,aAAb;AAA2B,QAAA,GAAG,EAAC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKvB,eAAL,CAAqB,OAArB,CADL,CADJ,EAII,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAC,aAAb;AAA2B,QAAA,GAAG,EAAC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKA,eAAL,CAAqB,OAArB,CADL,CAJJ,EAOI,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAC,KAAb;AAAmB,QAAA,GAAG,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,YAAY,EAAC,+HADjB;AAEI,QAAA,cAAc,EAAE;AAAK,UAAA,KAAK,EAAE;AAAEwB,YAAAA,MAAM;AAAR,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFpB;AAGI,QAAA,gBAAgB,EAAE;AAAK,UAAA,KAAK,EAAE;AAAEA,YAAAA,MAAM;AAAR,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHtB;AAII,QAAA,UAAU,EAAE;AAAK,UAAA,KAAK,EAAE;AAAEA,YAAAA,MAAM;AAAR,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJhB;AAKI,QAAA,KAAK,EAAE,KAAKjE,KAAL,CAAWI,KALtB;AAMI,QAAA,eAAe,EAAE,KAAKgB,eAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAPJ,CALJ,CADJ;AA0BH;AAlKL;;AAAA;AAAA,EAA0BtC,KAAK,CAACoF,SAAhC","sourcesContent":["import React from 'react';\nimport { Tabs, Spin, Row, Col, Radio } from 'antd';\nimport { GEO_OPTIONS, POS_KEY, API_ROOT, AUTH_HEADER, TOKEN_KEY } from '../constants';\nimport { Gallery } from './Gallery';\nimport { CreatePostButton } from './CreatePostButton';\nimport { AroundMap } from './AroundMap';\n\nconst TabPane = Tabs.TabPane;\nconst RadioGroup = Radio.Group;\n\nexport class Home extends React.Component {\n    state = {\n        isLoadingGeoLocation: false,\n        error: '',\n        isLoadingPosts: false,\n        posts: [],\n        topic: 'around',\n    }\n\n    componentDidMount() {\n        if (\"geolocation\" in navigator) {\n            this.setState({ isLoadingGeoLocation: true, error: '' });\n            navigator.geolocation.getCurrentPosition(\n                this.onSuccessLoadGeoLocation,\n                this.onFailedLoadGeoLocation,\n                GEO_OPTIONS);\n        } else {\n            this.setState({ error: 'Geolocation is not supported.'});\n        }\n    }\n\n    onSuccessLoadGeoLocation = (position) => {\n        console.log(position);\n        const { latitude, longitude } = position.coords;\n        localStorage.setItem(POS_KEY, JSON.stringify({ lat: latitude, lon: longitude }));\n        this.setState({ isLoadingGeoLocation: false });\n        this.loadNearbyPosts();\n    }\n\n    onFailedLoadGeoLocation = () => {\n        this.setState({ isLoadingGeoLocation: false, error: 'Failed to load geolocation.' });\n    }\n\n    loadNearbyPosts = (center, radius) => {\n        const { lat, lon } = center ? center : JSON.parse(localStorage.getItem(POS_KEY));\n        const range = radius ? radius : 20;\n        const token = localStorage.getItem(TOKEN_KEY);\n        this.setState({ isLoadingPosts: true, error: '' });\n        return fetch(`${API_ROOT}/search?lat=${lat}&lon=${lon}&range=${range}`, {\n            method: 'GET',\n            headers: {\n                Authorization: `${AUTH_HEADER} ${token}`,\n            },\n        }).then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n            throw new Error('Failed to load posts.');\n        }).then((data) => {\n            console.log(data);\n            this.setState({ isLoadingPosts: false, posts: data ? data : [] });\n        }).catch((e) => {\n            console.log(e.message);\n            this.setState({ isLoadingPosts: false, error: e.message });\n        });\n    }\n\n    getPanelContent = (type) => {\n        const { error, isLoadingGeoLocation, isLoadingPosts, posts } = this.state;\n        if (error) {\n            return <div>{error}</div>\n        } else if(isLoadingGeoLocation) {\n            return <Spin tip=\"Loading geo location...\"/>\n        } else if (isLoadingPosts) {\n            return <Spin tip=\"Loading posts...\" />\n        } else if (posts.length > 0) {\n            return type === 'image' ? this.getImagePosts() : this.getVideoPosts();\n        } else {\n            return 'No nearby posts.';\n        }\n    }\n\n    getVideoPosts = () => {\n        return (\n            <Row gutter={32}>\n                {this.state.posts.filter((post) => post.type === 'video').map((post) => {\n                    return (\n                        <Col span={6} key={post.url}>\n                            <video src={post.url} controls className=\"video-block\"/>\n                            <p>{post.user}: {post.message}</p>\n                        </Col>\n                    );\n                })}\n            </Row>\n        );\n    }\n\n    getImagePosts = () => {\n        const images = this.state.posts\n            .filter((post) => post.type === 'image')\n            .map((post) => {\n                return {\n                    user: post.user,\n                    src: post.url,\n                    thumbnail: post.url,\n                    caption: post.message,\n                    thumbnailWidth: 400,\n                    thumbnailHeight: 300,\n                }\n            });\n\n        return (<Gallery images={images}/>);\n    }\n\n    onTopicChange = (e) => {\n        const topic = e.target.value;\n        this.setState({ topic });\n        if (topic === 'around') {\n            this.loadNearbyPosts();\n        } else {\n            const token = localStorage.getItem(TOKEN_KEY);\n            this.setState({ isLoadingPosts: true, error: '' });\n            fetch(`${API_ROOT}/cluster?term=face`, {\n                method: 'GET',\n                headers: {\n                    Authorization: `${AUTH_HEADER} ${token}`,\n                },\n            }).then((response) => {\n                if (response.ok) {\n                    return response.json();\n                }\n                throw new Error(response.statusText);\n            })\n                .then((data) => {\n                    console.log(data);\n                    this.setState({ isLoadingPosts: false, posts: data ? data : [] });\n                })\n                .catch((e) => {\n                    console.log(e);\n                    this.setState({ isLoadingPosts: false, error: 'Loading face images failed.'});\n                });\n        }\n    }\n\n    render() {\n        const operations = <CreatePostButton loadNearbyPosts={this.loadNearbyPosts}/>;\n        return (\n            <div className=\"home\">\n                <RadioGroup onChange={this.onTopicChange} value={this.state.topic} className=\"topic-radio-group\">\n                    <Radio value=\"around\">Posts Around Me</Radio>\n                    <Radio value=\"face\">Faces Around The World</Radio>\n                </RadioGroup>\n                <Tabs tabBarExtraContent={operations} className=\"main-tabs\">\n                    <TabPane tab=\"Image Posts\" key=\"1\">\n                        {this.getPanelContent('image')}\n                    </TabPane>\n                    <TabPane tab=\"Video Posts\" key=\"2\">\n                        {this.getPanelContent('video')}\n                    </TabPane>\n                    <TabPane tab=\"Map\" key=\"3\">\n                        <AroundMap\n                            googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD3CEh9DXuyjozqptVB5LA-dN7MxWWkr9s&v=3.exp&libraries=geometry,drawing,places\"\n                            loadingElement={<div style={{ height: `100%` }} />}\n                            containerElement={<div style={{ height: `800px` }} />}\n                            mapElement={<div style={{ height: `100%` }} />}\n                            posts={this.state.posts}\n                            loadNearbyPosts={this.loadNearbyPosts}\n                        />\n                    </TabPane>\n                </Tabs>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}