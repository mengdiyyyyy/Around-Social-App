{"ast":null,"code":"import _classCallCheck from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/src/components/Home.js\";\nimport React from 'react';\nimport { Tabs, Spin } from 'antd';\nimport { GEO_OPTIONS, POS_KEY, API_ROOT, AUTH_HEADER, TOKEN_KEY } from '../constants';\nimport { Gallery } from './Gallery';\nimport { CreatePostButton } from './CreatePostButton';\nvar TabPane = Tabs.TabPane;\nexport var Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoadingGeoLocation: false,\n      error: '',\n      isLoadingPosts: false,\n      posts: []\n    };\n\n    _this.onSuccessLoadGeoLocation = function (position) {\n      console.log(position);\n      var _position$coords = position.coords,\n          latitude = _position$coords.latitude,\n          longitude = _position$coords.longitude;\n      localStorage.setItem(POS_KEY, JSON.stringify({\n        lat: latitude,\n        lon: longitude\n      }));\n\n      _this.setState({\n        isLoadingGeoLocation: false\n      });\n\n      _this.loadNearbyPosts();\n    };\n\n    _this.onFailedLoadGeoLocation = function () {\n      _this.setState({\n        isLoadingGeoLocation: false,\n        error: 'Failed to load geolocation.'\n      });\n    };\n\n    _this.loadNearbyPosts = function () {\n      var _JSON$parse = JSON.parse(localStorage.getItem(POS_KEY)),\n          lat = _JSON$parse.lat,\n          lon = _JSON$parse.lon;\n\n      var token = localStorage.getItem(TOKEN_KEY);\n\n      _this.setState({\n        isLoadingPosts: true,\n        error: ''\n      });\n\n      return fetch(\"\".concat(API_ROOT, \"/search?lat=\").concat(lat, \"&lon=\").concat(lon, \"&range=20\"), {\n        method: 'GET',\n        headers: {\n          Authorization: \"\".concat(AUTH_HEADER, \" \").concat(token)\n        }\n      }).then(function (response) {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error('Failed to load posts.');\n      }).then(function (data) {\n        console.log(data);\n\n        _this.setState({\n          isLoadingPosts: false,\n          posts: data ? data : []\n        });\n      }).catch(function (e) {\n        console.log(e.message);\n\n        _this.setState({\n          isLoadingPosts: false,\n          error: e.message\n        });\n      });\n    };\n\n    _this.getImagePosts = function () {\n      var _this$state = _this.state,\n          error = _this$state.error,\n          isLoadingGeoLocation = _this$state.isLoadingGeoLocation,\n          isLoadingPosts = _this$state.isLoadingPosts,\n          posts = _this$state.posts;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, error);\n      } else if (isLoadingGeoLocation) {\n        return React.createElement(Spin, {\n          tip: \"Loading geo location...\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n      } else if (isLoadingPosts) {\n        return React.createElement(Spin, {\n          tip: \"Loading posts...\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        });\n      } else if (posts.length > 0) {\n        var images = _this.state.posts.map(function (post) {\n          return {\n            user: post.user,\n            src: post.url,\n            thumbnail: post.url,\n            caption: post.message,\n            thumbnailWidth: 400,\n            thumbnailHeight: 300\n          };\n        });\n\n        return React.createElement(Gallery, {\n          images: images,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        });\n      } else {\n        return 'No nearby posts.';\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (\"geolocation\" in navigator) {\n        this.setState({\n          isLoadingGeoLocation: true,\n          error: ''\n        });\n        navigator.geolocation.getCurrentPosition(this.onSuccessLoadGeoLocation, this.onFailedLoadGeoLocation, GEO_OPTIONS);\n      } else {\n        this.setState({\n          error: 'Geolocation is not supported.'\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var operations = React.createElement(CreatePostButton, {\n        loadNearbyPosts: this.loadNearbyPosts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      });\n      return React.createElement(Tabs, {\n        tabBarExtraContent: operations,\n        className: \"main-tabs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: \"Image Posts\",\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.getImagePosts()), React.createElement(TabPane, {\n        tab: \"Video Posts\",\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Content of tab 2\"), React.createElement(TabPane, {\n        tab: \"Map\",\n        key: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Content of tab 3\"));\n    }\n  }]);\n\n  return Home;\n}(React.Component);","map":{"version":3,"sources":["/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/src/components/Home.js"],"names":["React","Tabs","Spin","GEO_OPTIONS","POS_KEY","API_ROOT","AUTH_HEADER","TOKEN_KEY","Gallery","CreatePostButton","TabPane","Home","state","isLoadingGeoLocation","error","isLoadingPosts","posts","onSuccessLoadGeoLocation","position","console","log","coords","latitude","longitude","localStorage","setItem","JSON","stringify","lat","lon","setState","loadNearbyPosts","onFailedLoadGeoLocation","parse","getItem","token","fetch","method","headers","Authorization","then","response","ok","json","Error","data","catch","e","message","getImagePosts","length","images","map","post","user","src","url","thumbnail","caption","thumbnailWidth","thumbnailHeight","navigator","geolocation","getCurrentPosition","operations","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Tabs, Spin } from 'antd';\nimport { GEO_OPTIONS, POS_KEY, API_ROOT, AUTH_HEADER, TOKEN_KEY } from '../constants';\nimport { Gallery } from './Gallery';\nimport { CreatePostButton } from './CreatePostButton';\n\nconst TabPane = Tabs.TabPane;\n\nexport class Home extends React.Component {\n    state = {\n        isLoadingGeoLocation: false,\n        error: '',\n        isLoadingPosts: false,\n        posts: [],\n    }\n\n    componentDidMount() {\n        if (\"geolocation\" in navigator) {\n            this.setState({ isLoadingGeoLocation: true, error: '' });\n            navigator.geolocation.getCurrentPosition(\n                this.onSuccessLoadGeoLocation,\n                this.onFailedLoadGeoLocation,\n                GEO_OPTIONS);\n        } else {\n            this.setState({ error: 'Geolocation is not supported.'});\n        }\n    }\n\n    onSuccessLoadGeoLocation = (position) => {\n        console.log(position);\n        const { latitude, longitude } = position.coords;\n        localStorage.setItem(POS_KEY, JSON.stringify({ lat: latitude, lon: longitude }));\n        this.setState({ isLoadingGeoLocation: false });\n        this.loadNearbyPosts();\n    }\n\n    onFailedLoadGeoLocation = () => {\n        this.setState({ isLoadingGeoLocation: false, error: 'Failed to load geolocation.' });\n    }\n\n    loadNearbyPosts = () => {\n        const { lat, lon } = JSON.parse(localStorage.getItem(POS_KEY));\n        const token = localStorage.getItem(TOKEN_KEY);\n        this.setState({ isLoadingPosts: true, error: '' });\n        return fetch(`${API_ROOT}/search?lat=${lat}&lon=${lon}&range=20`, {\n            method: 'GET',\n            headers: {\n                Authorization: `${AUTH_HEADER} ${token}`,\n            },\n        }).then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n            throw new Error('Failed to load posts.');\n        }).then((data) => {\n            console.log(data);\n            this.setState({ isLoadingPosts: false, posts: data ? data : [] });\n        }).catch((e) => {\n            console.log(e.message);\n            this.setState({ isLoadingPosts: false, error: e.message });\n        });\n    }\n\n    getImagePosts = () => {\n        const { error, isLoadingGeoLocation, isLoadingPosts, posts } = this.state;\n        if (error) {\n            return <div>{error}</div>\n        } else if(isLoadingGeoLocation) {\n            return <Spin tip=\"Loading geo location...\"/>\n        } else if (isLoadingPosts) {\n            return <Spin tip=\"Loading posts...\" />\n        } else if (posts.length > 0) {\n            const images = this.state.posts.map((post) => {\n                return {\n                    user: post.user,\n                    src: post.url,\n                    thumbnail: post.url,\n                    caption: post.message,\n                    thumbnailWidth: 400,\n                    thumbnailHeight: 300,\n                }\n            });\n\n            return (<Gallery images={images}/>);\n        } else {\n            return 'No nearby posts.';\n        }\n    }\n\n    render() {\n        const operations = <CreatePostButton loadNearbyPosts={this.loadNearbyPosts}/>;\n        return (\n            <Tabs tabBarExtraContent={operations} className=\"main-tabs\">\n                <TabPane tab=\"Image Posts\" key=\"1\">\n                    {this.getImagePosts()}\n                </TabPane>\n                <TabPane tab=\"Video Posts\" key=\"2\">Content of tab 2</TabPane>\n                <TabPane tab=\"Map\" key=\"3\">Content of tab 3</TabPane>\n            </Tabs>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}