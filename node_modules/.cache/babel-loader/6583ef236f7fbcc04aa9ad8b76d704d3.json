{"ast":null,"code":"import _classCallCheck from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/src/components/Home.js\";\nimport React from 'react';\nimport { Tabs, Button, Spin } from 'antd';\nimport { GEO_OPTIONS, POS_KEY, API_ROOT, AUTH_HEADER, TOKEN_KEY } from '../constants.js';\nvar TabPane = Tabs.TabPane;\nexport var Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoadingGeoLocation: false,\n      error: '',\n      isLoadPost: false\n    };\n\n    _this.onSuccessLoadGeoLocation = function (position) {\n      console.log(position);\n      var _position$coords = position.coords,\n          latitude = _position$coords.latitude,\n          longitude = _position$coords.longitude;\n      localStorage.setItem(POS_KEY, JSON.stringify({\n        lat: latitude,\n        lon: longitude\n      }));\n\n      _this.setState({\n        isLoadingGeolocation: false\n      });\n\n      _this.loadNearbyPost();\n    };\n\n    _this.onFailedLoadGeoLocation = function () {\n      _this.setState({\n        isLoadingGeolocation: false,\n        error: 'Failed to load geo location.'\n      });\n    };\n\n    _this.loadNearbyPost = function () {\n      var _JSON$parse = JSON.parse(localStorage.getItem(POS_KEY)),\n          lat = _JSON$parse.lat,\n          lon = _JSON$parse.lon;\n\n      var token = localStorage.getItem(TOKEN_KEY);\n      fetch(\"\".concat(API_ROOT, \"/search?lat=\").concat(lat, \"&lon=\").concat(lon, \"&range=20000\"), {\n        method: 'GET',\n        headers: {\n          Authorization: \"\".concat(AUTH_HEADER, \" \").concat(token)\n        }\n      }).then(function (response) {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error('Failed to load posts');\n      }).then(function (data) {\n        console.log(data);\n      }).catch(function (e) {\n        console.log(e.message);\n      });\n    };\n\n    _this.getImagePosts = function () {\n      var _this$state = _this.state,\n          error = _this$state.error,\n          isLoadingGeoLocation = _this$state.isLoadingGeoLocation;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, error);\n      } else if (isLoadingGeoLocation) {\n        return React.createElement(Spin, {\n          tip: \"Loading geo location..\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        });\n      } else {\n        return 'content of tab1';\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (\"geolocation\" in navigator) {\n        this.setState({\n          isLoadingGeolocation: true,\n          error: ''\n        });\n        navigator.geolocation.getCurrentPosition(this.onSuccessLoadGeoLocation, this.onFailedLoadGeoLocation, GEO_OPTIONS);\n      } else {\n        this.setState({\n          error: 'Geolocation is not supported.'\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var operations = React.createElement(Button, {\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Create New Post\");\n      return React.createElement(Tabs, {\n        tabBarExtraContent: operations,\n        className: \"main-tabs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        tab: \"Image Posts\",\n        key: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.getImagePosts()), React.createElement(TabPane, {\n        tab: \"Video Posts\",\n        key: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Content of tab 2\"), React.createElement(TabPane, {\n        tab: \"Map\",\n        key: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Content of tab 3\"));\n    }\n  }]);\n\n  return Home;\n}(React.Component);","map":{"version":3,"sources":["/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/src/components/Home.js"],"names":["React","Tabs","Button","Spin","GEO_OPTIONS","POS_KEY","API_ROOT","AUTH_HEADER","TOKEN_KEY","TabPane","Home","state","isLoadingGeoLocation","error","isLoadPost","onSuccessLoadGeoLocation","position","console","log","coords","latitude","longitude","localStorage","setItem","JSON","stringify","lat","lon","setState","isLoadingGeolocation","loadNearbyPost","onFailedLoadGeoLocation","parse","getItem","token","fetch","method","headers","Authorization","then","response","ok","json","Error","data","catch","e","message","getImagePosts","navigator","geolocation","getCurrentPosition","operations","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Tabs, Button, Spin } from 'antd';\nimport { GEO_OPTIONS, POS_KEY, API_ROOT, AUTH_HEADER, TOKEN_KEY} from '../constants.js';\n\nconst TabPane = Tabs.TabPane;\n\n\nexport class Home extends React.Component {\n    state = {\n        isLoadingGeoLocation: false,\n        error: '',\n        isLoadPost: false,\n    }\n\n    componentDidMount() {\n        if (\"geolocation\" in navigator) {\n            this.setState({ isLoadingGeolocation:true , error : '' });\n            navigator.geolocation.getCurrentPosition(\n                this.onSuccessLoadGeoLocation,\n                this.onFailedLoadGeoLocation,\n                GEO_OPTIONS);\n        } else {\n            this.setState({error: 'Geolocation is not supported.'});\n        }\n    }\n\n    onSuccessLoadGeoLocation = (position) => {\n        console.log(position);\n        const { latitude, longitude } = position.coords;\n        localStorage.setItem(POS_KEY, JSON.stringify({ lat: latitude, lon : longitude}));\n        this.setState({ isLoadingGeolocation:false });\n        this.loadNearbyPost();\n\n    }\n\n\n\n    onFailedLoadGeoLocation = () => {\n        this.setState({ isLoadingGeolocation:false , error:'Failed to load geo location.' });\n    }\n\n    loadNearbyPost = () => {\n        const { lat, lon } = JSON.parse(localStorage.getItem(POS_KEY));\n        const token = localStorage.getItem(TOKEN_KEY);\n        fetch(`${API_ROOT}/search?lat=${lat}&lon=${lon}&range=20000`,  {\n            method: 'GET',\n            headers: {\n                Authorization: `${AUTH_HEADER} ${token}`,\n            },\n        }).then((response) => {\n            if (response.ok) {\n                return response.json();\n            }\n            throw new Error('Failed to load posts');\n        }).then((data) => {\n            console.log(data);\n        }).catch((e) => {\n            console.log(e.message);\n        });\n    }\n\n    getImagePosts = () => {\n        const { error, isLoadingGeoLocation } = this.state;\n        if (error) {\n            return <div>{error}</div>\n        }  else if (isLoadingGeoLocation) {\n            return <Spin tip=\"Loading geo location..\"/>\n        } else {\n            return 'content of tab1';\n        }\n    }\n\n    render() {\n        const operations = <Button type=\"primary\">Create New Post</Button>;\n        return(\n            <Tabs tabBarExtraContent={operations} className=\"main-tabs\">\n                <TabPane tab=\"Image Posts\" key=\"1\">\n                    {this.getImagePosts()}\n                </TabPane>\n                <TabPane tab=\"Video Posts\" key=\"2\">Content of tab 2</TabPane>\n                <TabPane tab=\"Map\" key=\"3\">Content of tab 3</TabPane>\n            </Tabs>\n        );\n    }\n\n}"]},"metadata":{},"sourceType":"module"}