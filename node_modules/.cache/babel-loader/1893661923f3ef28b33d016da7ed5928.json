{"ast":null,"code":"import _classCallCheck from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/src/Register.js\";\nimport React from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport { API_ROOT } from './constants';\nvar FormItem = Form.Item;\n\nvar RegistrationForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegistrationForm, _React$Component);\n\n  function RegistrationForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegistrationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegistrationForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false,\n      autoCompleteResult: []\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          fetch(\"\".concat(API_ROOT, \"/signup\"), {\n            method: 'POST',\n            body: JSON.stringify({\n              username: values.username,\n              password: values.password\n            })\n          }).then(function (response) {\n            if (response.ok) {\n              return response;\n            }\n\n            throw new Error(response.statusText);\n          }).then(function () {\n            message.success('Registration Succeed');\n          }).catch(function (e) {\n            message.error('Registration Failed');\n            console.log(e);\n          });\n        }\n      });\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    return _this;\n  }\n\n  _createClass(RegistrationForm, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      var tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        }\n      };\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), getFieldDecorator('username', {\n        rules: [{\n          required: true,\n          message: 'Please input your username!',\n          whitespace: false\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, formItemLayout, {\n        label: \"Confirm Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        onBlur: this.handleConfirmBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }))), React.createElement(FormItem, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Register\")));\n    }\n  }]);\n\n  return RegistrationForm;\n}(React.Component);\n\nexport var Register = Form.create()(RegistrationForm);","map":{"version":3,"sources":["/Users/mengdiyang/Desktop/laioffer/laiproject/project4NBA/around-web/src/Register.js"],"names":["React","Form","Input","Button","message","API_ROOT","FormItem","Item","RegistrationForm","state","confirmDirty","autoCompleteResult","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","fetch","method","body","JSON","stringify","username","password","then","response","ok","Error","statusText","success","catch","error","console","log","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","rules","required","whitespace","validator","Component","Register","create"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Form, Input, Button, message } from 'antd';\nimport { API_ROOT } from './constants';\n\nconst FormItem = Form.Item;\n\nclass RegistrationForm extends React.Component {\n    state = {\n        confirmDirty: false,\n        autoCompleteResult: [],\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                fetch(`${API_ROOT}/signup`, {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        username: values.username,\n                        password: values.password,\n                    }),\n                }).then((response) => {\n                    if (response.ok) {\n                        return response;\n                    }\n                    throw new Error(response.statusText);\n                }).then(() => {\n                    message.success('Registration Succeed');\n                }).catch((e) => {\n                    message.error('Registration Failed');\n                    console.log(e);\n                })\n            }\n        });\n    }\n\n    handleConfirmBlur = (e) => {\n        const value = e.target.value;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    }\n\n    compareToFirstPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('Two passwords that you enter is inconsistent!');\n        } else {\n            callback();\n        }\n    }\n\n    validateToNextPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], { force: true });\n        }\n        callback();\n    }\n\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 8 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 16 },\n            },\n        };\n        const tailFormItemLayout = {\n            wrapperCol: {\n                xs: {\n                    span: 24,\n                    offset: 0,\n                },\n                sm: {\n                    span: 16,\n                    offset: 8,\n                },\n            },\n        };\n\n        return (\n            <Form onSubmit={this.handleSubmit} className=\"register\">\n\n                <FormItem\n                    {...formItemLayout}\n                    label=\"Username\"\n                >\n                    {getFieldDecorator('username', {\n                        rules: [{ required: true, message: 'Please input your username!', whitespace: false }],\n                    })(\n                        <Input />\n                    )}\n                </FormItem>\n\n        <FormItem\n        {...formItemLayout}\n        label=\"Password\"\n            >\n            {getFieldDecorator('password', {\n            rules: [{\n                required: true, message: 'Please input your password!',\n            }, {\n                validator: this.validateToNextPassword,\n            }],\n        })(\n        <Input type=\"password\" />\n    )}\n    </FormItem>\n\n        <FormItem\n        {...formItemLayout}\n        label=\"Confirm Password\"\n            >\n            {getFieldDecorator('confirm', {\n            rules: [{\n                required: true, message: 'Please confirm your password!',\n            }, {\n                validator: this.compareToFirstPassword,\n            }],\n        })(\n        <Input type=\"password\" onBlur={this.handleConfirmBlur} />\n    )}\n    </FormItem>\n\n        <FormItem {...tailFormItemLayout}>\n    <Button type=\"primary\" htmlType=\"submit\">Register</Button>\n            </FormItem>\n            </Form>\n    );\n    }\n}\n\nexport const Register = Form.create()(RegistrationForm);\n\n"]},"metadata":{},"sourceType":"module"}